
// This file has been generated by the GUI designer. Do not modify.
namespace CmisSync.Widgets
{
	public partial class BandwidthLimitWidget
	{
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.CheckButton activateLimitToggle;
		
		private global::Gtk.SpinButton bandwidthSpinButton;
		
		private global::Gtk.Label unitLabel;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget CmisSync.Widgets.BandwidthLimitWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "CmisSync.Widgets.BandwidthLimitWidget";
			// Container child CmisSync.Widgets.BandwidthLimitWidget.Gtk.Container+ContainerChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.activateLimitToggle = new global::Gtk.CheckButton ();
			this.activateLimitToggle.CanFocus = true;
			this.activateLimitToggle.Name = "activateLimitToggle";
			this.activateLimitToggle.Label = global::Mono.Unix.Catalog.GetString ("Limit bandwidth to");
			this.activateLimitToggle.DrawIndicator = true;
			this.activateLimitToggle.UseUnderline = true;
			this.hbox1.Add (this.activateLimitToggle);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.activateLimitToggle]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.bandwidthSpinButton = new global::Gtk.SpinButton (0.01, 1000000, 10);
			this.bandwidthSpinButton.CanFocus = true;
			this.bandwidthSpinButton.Name = "bandwidthSpinButton";
			this.bandwidthSpinButton.Adjustment.PageIncrement = 1000;
			this.bandwidthSpinButton.Adjustment.PageSize = 10;
			this.bandwidthSpinButton.ClimbRate = 1;
			this.bandwidthSpinButton.Digits = ((uint)(2));
			this.bandwidthSpinButton.Numeric = true;
			this.bandwidthSpinButton.Value = 100;
			this.hbox1.Add (this.bandwidthSpinButton);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.bandwidthSpinButton]));
			w2.Position = 1;
			// Container child hbox1.Gtk.Box+BoxChild
			this.unitLabel = new global::Gtk.Label ();
			this.unitLabel.Name = "unitLabel";
			this.unitLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("KB/s");
			this.hbox1.Add (this.unitLabel);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.unitLabel]));
			w3.PackType = ((global::Gtk.PackType)(1));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			this.Add (this.hbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.activateLimitToggle.Toggled += new global::System.EventHandler (this.IsLimitedToggled);
			this.bandwidthSpinButton.ValueChanged += new global::System.EventHandler (this.ValueChanged);
		}
	}
}
