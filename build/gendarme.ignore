#Configure setting
R: Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule
T: CmisSync.Defines
T: CmisSync.Lib.Defines
T: CmisSync.Lib.Config.Config

#Define
R: Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule
T: CmisSync.Lib.Defines

#  http://blogs.msdn.com/b/pfxteam/archive/2012/03/25/10287435.aspx
R: Gendarme.Rules.Correctness.DisposableFieldsShouldBeDisposedRule
T: CmisSync.Lib.Queueing.SyncEventQueue

#Ignore dispose pattern for UI widget (Linux)
R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule
M: System.Void CmisSync.CertPolicyHandler/<ShowCertDialog>c__AnonStorey0::<>m__7(System.Object,System.EventArgs)
M: System.Void CmisSync.StatusIcon/<RemoveFolderFromSyncDelegate>c__AnonStorey17::<>m__73(System.Object,System.EventArgs)
M: System.Void CmisSync.Setup::ShowSetupPage()
M: System.Void CmisSync.Setup::ShowAdd2Page()
M: System.Void CmisSync.Setup::ShowFinishedPage()
M: System.Void CmisSync.SetupWindow::.ctor()
M: System.Void CmisSync.StatusIcon::CreateMenu()
M: System.Void CmisSync.CmisSyncMenuItem::.ctor(System.String)

#Configure setting
R: Gendarme.Rules.Portability.DoNotHardcodePathsRule
M: System.Void CmisSync.UI::.cctor()
M: System.Void TestLibrary.PathMatcherTests.PathMatcherTest::SetUp()
M: TestLibrary.ConfigTests::TestBrand()
M: System.Collections.Generic.List`1<System.String> CmisSync.ClientBrand::get_PathList()
T: TestLibrary.EventsTests.EventsFilterTests.IgnoredFolderNamesFilterTest

#Required to be type long for error code
R: Gendarme.Rules.Design.EnumsShouldUseInt32Rule
T: CmisSync.CertPolicyHandler/CertificateProblem

#Top level widget does not need dispose pattern (Linux)
R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule
T: CmisSync.UI
T: CmisSync.StatusIcon
T: CmisSync.ControllerBase

# Disposed in TearDown
R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule
T: TestLibrary.IntegrationTests.FullRepoTests
T: TestLibrary.ProducerTests.WatcherTests.WatcherData
T: TestLibrary.StorageTests.PersistentCookieStorageTest
T: TestLibrary.StorageTests.MetaDataStorageTest
T: TestLibrary.IntegrationTests.DBreezeTests
T: TestLibrary.IntegrationTests.AllHandlersIT
T: TestLibrary.AuthenticationProviderTests.AuthProviderFactoryTest
#Ignore dispose pattern for UI widget (Windows)
R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule
T: CmisSync.ControllerBase
T: CmisSync.StatusIconController
T: CmisSync.UI
T: CmisSync.CmisTree.AsyncNodeLoader
T: CmisSync.Edit
#Disposed in CmisSync.Lib.Cmis.Repository:
T: CmisSync.Lib.Storage.Database.PersistentCookieStorage
T: CmisSync.Lib.Storage.Database.MetaDataStorage
T: CmisSync.Lib.Storage.Database.FileTransmissionStorage

#Windows gendarme bug? XmlNodeList is not an IDisposal object at all
R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule
M: System.Collections.ObjectModel.Collection`1<System.String> CmisSync.Lib.Config::get_Folders()
M: System.Void CmisSync.Lib.Config::RemoveFolder(System.String)

#Ignore correct implementation of dispose pattern in ControllerBase
R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule
M: System.Void CmisSync.ControllerBase::AddRepository(CmisSync.Lib.Config.RepoInfo)

#Ignore DotCMIS based rule
R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
M: System.Void CmisSync.Lib.Cmis.UiUtils.CmisUtils/FolderTree::.ctor(System.Collections.Generic.IList`1<DotCMIS.Client.ITree`1<DotCMIS.Client.IFileableCmisObject>>,DotCMIS.Client.IFolder,System.Int32)

#We want to sort only
R: Gendarme.Rules.Design.ImplementIComparableCorrectlyRule
T: CmisSync.Lib.Queueing.SyncEventHandler

#Ignore Dispose pattern for checked classes
R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule
T: CmisSync.Lib.Events.Filter.AbstractFileFilter
T: CmisSync.Lib.Events.Filter.FailedOperationsFilter

#Ignore dispose pattern for MemoryStream used in Testcases
R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule
M: System.Void TestLibrary.TasksTests.ChunkedDownloaderTest::FullDownloadTest()
M: System.Void TestLibrary.TasksTests.ChunkedDownloaderTest::ResumeDownloadTest()
M: System.Void TestLibrary.TestUtils.IsTestWithConfiguredLog4Net::.cctor()

#Ignore AvoidUnnecessarySpecializationRule for PermissionDeniedEvent, CmisConnectionExceptionEvent and ProxyAuthRequiredEvent
R: Gendarme.Rules.Maintainability.AvoidUnnecessarySpecializationRule
T: CmisSync.Lib.Events.ProxyAuthRequiredEvent
T: CmisSync.Lib.Events.PermissionDeniedEvent
T: CmisSync.Lib.Events.CmisConnectionExceptionEvent
M: System.Void CmisSync.Lib.Consumer.SituationSolver.AbstractEnhancedSolver::EnsureThatLocalFileNameContainsLegalCharacters(CmisSync.Lib.Storage.FileSystem.IFileSystemInfo,DotCMIS.Exceptions.CmisConstraintException)

#Ignore DoNotExposeNestedGenericSignaturesRule where DotCmis forces us
R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
T: CmisSync.Lib.Cmis.UiUtils.CmisUtils/NodeTree

#Ignore DoNotHardCodePaths
R: Gendarme.Rules.Portability.DoNotHardcodePathsRule
T: TestLibrary.ConfigTests.RepoInfoTests
T: CmisSync.ClientBrand 
# Install dir
T: CmisSync.Controller

# Test for Events which have nested exceptions
R: Gendarme.Rules.BadPractice.CheckNewExceptionWithoutThrowingRule
T: TestLibrary.FilterTests.GenericHandleDublicatedEventsFilterTest

# Ignore disturbing Rule
R: Gendarme.Rules.Maintainability.AvoidUnnecessarySpecializationRule
T: CmisSync.CircularProgressBar

#Ignore Correct nested generic type warning
R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
M: System.Collections.Generic.IList`1<CmisSync.Lib.Storage.Database.IObjectTree`1<T>> CmisSync.Lib.Storage.Database.IObjectTree`1::get_Children()
M: System.Collections.Generic.IList`1<CmisSync.Lib.Storage.Database.IObjectTree`1<T>> CmisSync.Lib.Storage.Database.ObjectTree`1::get_Children()
M: System.Void CmisSync.Lib.Storage.Database.ObjectTree`1::set_Children
(System.Collections.Generic.IList`1<CmisSync.Lib.Storage.Database.IObjectTree`1<T>>)
M: CmisSync.Lib.Storage.Database.IObjectTree`1<DotCMIS.Client.IFileableCmisObject> CmisSync.Lib.Producer.Crawler.DescendantsCrawler::GetRemoteDirectoryTree(DotCMIS.Client.IFolder,System.Collections.Generic.IList`1<DotCMIS.Client.ITree`1<DotCMIS.Client.IFileableCmisObject>>,CmisSync.Lib.Filter.IFilterAggregator)
M: System.IDisposable CmisSync.Lib.Queueing.SyncEventQueue::Subscribe(System.IObserver`1<System.Tuple`2<System.String,System.Int32>>)

#Ignore AvoidRefAndOutParametersRule for filter
R: Gendarme.Rules.Design.AvoidRefAndOutParametersRule
N: CmisSync.Lib.Filter

#Ignore AvoidReturningArraysOnPropertiesRule for byte[] containing a cryptographic hash
R: Gendarme.Rules.Performance.AvoidReturningArraysOnPropertiesRule
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.FileTransmissionObject::get_LastChecksum()
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.FileTransmissionObject::get_LastChecksumPWC()
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.IFileTransmissionObject::get_LastChecksum()
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.IFileTransmissionObject::get_LastChecksumPWC()
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.IMappedObject::get_LastChecksum()
M: System.Byte[] CmisSync.Lib.Storage.Database.Entities.MappedObject::get_LastChecksum()

#Ignore AvoidUnnecessarySpecializationRule because the Type itself is important as information
R: Gendarme.Rules.Maintainability.AvoidUnnecessarySpecializationRule
M: System.Boolean CmisSync.Lib.Cmis.ConvenienceExtenders.ExceptionExtenders::IsVirusDetectionException(DotCMIS.Exceptions.CmisConstraintException)
M: System.Void CmisSync.Lib.Events.FullSyncCompletedEvent::.ctor(CmisSync.Lib.Events.StartNextSyncEvent)
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`1<T>>)
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`2<TModel,TProperty>>)

#Ignore AvoidRefAndOutParametersRule for extension
R: Gendarme.Rules.Design.AvoidRefAndOutParametersRule
M: System.Boolean CmisSync.Lib.Storage.Database.Entities.IFileConvenienceExtenders::IsContentChangedTo(CmisSync.Lib.Storage.FileSystem.IFileInfo,CmisSync.Lib.Storage.Database.Entities.IMappedObject,System.Byte[]&,System.Boolean)

#Ignore AvoidRefAndOutParametersRule for crawler because it is choosen based on performance reasons
M: System.Void CmisSync.Lib.Producer.Crawler.LocalEventGenerator::CreateEvents(System.Collections.Generic.IDictionary`2<System.Guid,CmisSync.Lib.Storage.Database.Entities.IMappedObject>,CmisSync.Lib.Storage.Database.IObjectTree`1<CmisSync.Lib.Storage.FileSystem.IFileSystemInfo>,System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<CmisSync.Lib.Events.AbstractFolderEvent,CmisSync.Lib.Events.AbstractFolderEvent>>,System.Collections.Generic.ISet`1<CmisSync.Lib.Storage.Database.Entities.IMappedObject>,System.Collections.Generic.List`1<CmisSync.Lib.Events.AbstractFolderEvent>&)
M: System.Void CmisSync.Lib.Producer.Crawler.RemoteEventGenerator::CreateEvents(System.Collections.Generic.IDictionary`2<System.String,CmisSync.Lib.Storage.Database.Entities.IMappedObject>,CmisSync.Lib.Storage.Database.IObjectTree`1<DotCMIS.Client.IFileableCmisObject>,System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<CmisSync.Lib.Events.AbstractFolderEvent,CmisSync.Lib.Events.AbstractFolderEvent>>,System.Collections.Generic.ISet`1<CmisSync.Lib.Storage.Database.Entities.IMappedObject>,System.Collections.Generic.List`1<CmisSync.Lib.Events.AbstractFolderEvent>&)

#Ignore AvoidRedundancyInTypeNameRule in the following classes because it is easier to write the full name to get the context
R: Gendarme.Rules.Naming.AvoidRedundancyInTypeNameRule
T: CmisSync.Lib.Config.ConfigManager
T: CmisSync.Lib.Config.ConfigMigration
T: CmisSync.Lib.Filter.FilterAggregator
T: CmisSync.Lib.Filter.IFilterAggregator
T: CmisSync.Lib.Producer.ContentChange.ContentChangeEventAccumulator
T: CmisSync.Lib.Producer.ContentChange.ContentChangeEventTransformer
T: CmisSync.Lib.Producer.Watcher.IWatcherProducer
T: CmisSync.Lib.Producer.Watcher.WatcherConsumer
T: CmisSync.Lib.SelectiveIgnore.SelectiveIgnoreEventTransformer
T: CmisSync.Lib.SelectiveIgnore.SelectiveIgnoreFilter
T: CmisSync.Lib.Storage.FileSystem.FileSystemInfoFactory
T: CmisSync.Lib.Storage.FileSystem.FileSystemInfoWrapper
T: CmisSync.Lib.Storage.FileSystem.IFileSystemInfo
T: CmisSync.Lib.Storage.FileSystem.IFileSystemInfoFactory
T: CmisSync.Lib.Storage.FileSystem.IFileSystemWatcher

#Ignore AvoidDeepNamespaceHierarchyRule for PWC and Database Entities
R: Gendarme.Rules.Naming.AvoidDeepNamespaceHierarchyRule
N: CmisSync.Lib.Consumer.SituationSolver.PWC
N: CmisSync.Lib.Storage.Database.Entities

#Ignore AvoidLackOfCohesionOfMethodsRule
R: Gendarme.Rules.Maintainability.AvoidLackOfCohesionOfMethodsRule
A: CmisSync.Lib

#Ignore AvoidUnusedParametersRule on code which is not available on every platform
R: Gendarme.Rules.Performance.AvoidUnusedParametersRule
M: System.String CmisSync.Lib.Config.Crypto::WindowsObfuscate(System.String)
M: System.String CmisSync.Lib.Config.Crypto::WindowsDeobfuscate(System.String)
M: System.Void CmisSync.Lib.Storage.FileSystem.ExtendedAttributeReaderDos::SetExtendedAttributeAndRestoreLastModificationDate(System.String,System.String,System.String)

#Ignore UsePreferredTermsRule for the term Login
R: Gendarme.Rules.Naming.UsePreferredTermsRule
T: CmisSync.Lib.Cmis.UiUtils.LoginCredentials
T: CmisSync.Lib.Cmis.UiUtils.LoginExceptionType
T: CmisSync.Lib.Cmis.UiUtils.LoginException
T: CmisSync.Lib.Events.SuccessfulLoginEvent
M: System.Boolean CmisSync.Lib.Config.ProxySettings::get_LoginRequired()
M: System.Void CmisSync.Lib.Config.ProxySettings::set_LoginRequired(System.Boolean)

#Ignore UseSingularNameInEnumsUnlessAreFlagsRule if singular is equal to plural
R: Gendarme.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsRule
T: CmisSync.Lib.Cmis.SyncStatus
T: CmisSync.Lib.FileTransmission.TransmissionStatus
T: CmisSync.Lib.Status.RepositoryStatus

#Ignore WriteStaticFieldFromInstanceMethodRule on DBreezeInitializerSingleton because it is designed as a singleton already, so it seems to be a false positive
R: Gendarme.Rules.Concurrency.WriteStaticFieldFromInstanceMethodRule
M: System.Void CmisSync.Lib.Storage.Database.DBreezeInitializerSingleton::.ctor()


#Ignore AvoidVisibleFieldsRule which are only visible for test reasons
R: Gendarme.Rules.Design.AvoidVisibleFieldsRule
T: CmisSync.Lib.Cmis.Repository
T: CmisSync.Lib.Consumer.SyncMechanism

#Ignore CheckParametersNullityInVisibleMethodsRule for reflection code
R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`1<T>>)
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`2<TModel,TProperty>>)

#Ignore PreferUriOverStringRule where a string is needed to handle user input
R: Gendarme.Rules.Design.PreferUriOverStringRule
M: System.String CmisSync.Lib.Config.DefaultEntries::get_Url()

#Ignore PreferXmlAbstractionsRule for log4net configuration
R: Gendarme.Rules.Design.PreferXmlAbstractionsRule
M: System.Xml.XmlNode CmisSync.Lib.Config.Config::get_Log4Net()
M: System.Void CmisSync.Lib.Config.Config::set_Log4Net(System.Xml.XmlNode)
M: System.Void CmisSync.Lib.Config.Config::SetLog4NetConfig(System.Xml.XmlNode)

#Ignore UseFileOpenOnlyWithFileAccessRule because it is needed by a wrapper to wrap interfaces correctly
R: Gendarme.Rules.BadPractice.UseFileOpenOnlyWithFileAccessRule
M: System.IO.Stream CmisSync.Lib.Storage.FileSystem.FileInfoWrapper::Open(System.IO.FileMode)

# TryParseRule should not give any warning in test library
R: Gendarme.Rules.BadPractice.PreferTryParseRule
A: TestLibrary, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null

#Ignore DoNotExposeNestedGenericSignaturesRule where it is very helpful
R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`1<T>>)
M: System.String CmisSync.Lib.Utils::NameOf(System.Linq.Expressions.Expression`1<System.Func`2<TModel,TProperty>>)
